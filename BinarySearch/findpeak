class Solution {
    public int findPeakElement(int[] nums) {
        int start = 0;
        int end = nums.length - 1;


        if (nums.length == 1) {
            return 0;
        }
        while (start <= end) {
            int mid = start + (end - start) / 2;

            if ((mid == 0 || nums[mid] > nums[mid - 1]) && (mid == nums.length - 1 || nums[mid] > nums[mid + 1])) {
                return mid;
            }

            if (mid < nums.length - 1 && nums[mid] < nums[mid + 1]) {
                start = mid + 1;
            }
            else {
                end = mid - 1;
            }
        }

        // This return statement will never be reached because the peak will always be found
        return -1;
    }
}
